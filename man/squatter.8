.\" -*- nroff -*-
.TH SQUATTER 8 "Project Cyrus" CMU
.\"
.\" Copyright (c) 1994-2008 Carnegie Mellon University.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. The name "Carnegie Mellon University" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For permission or any legal
.\"    details, please contact
.\"      Carnegie Mellon University
.\"      Center for Technology Transfer and Enterprise Creation
.\"      4615 Forbes Avenue
.\"      Suite 302
.\"      Pittsburgh, PA  15213
.\"      (412) 268-7393, fax: (412) 268-7395
.\"      innovation@andrew.cmu.edu
.\"
.\" 4. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by Computing Services
.\"     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
.\"
.\" CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
.\" THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
.\" FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
.\" AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.SH NAME
squatter \- create SQUAT indexes for mailboxes
.SH SYNOPSIS
.B squatter
[
.B \-C
.I config-file
]
[
.B \-r
]
[
.B \-s
]
[
.B \-i
]
[
.B \-a
]
[
.B \-v
]
.IR mailbox ...
.br
.B squatter
[
.B \-C
.I config-file
]
[
.B -v
]
[
.B -s
]
[
.B -d
]
[
.B -n
.I channel
]
.B -R
.br
.B squatter
[
.B \-C
.I config-file
]
[
.B -v
]
[
.B -s
]
.B -f
.I synclogfile
.SH DESCRIPTION
.B Squatter
creates a new text index for one or more IMAP mailboxes.  The
index is a unified index of all of the header and body text of each
message in a given mailbox.  This index is used to significantly reduce
IMAP SEARCH times on a mailbox.
.PP
The name \fBsquatter\fP is a historical relic from the days when the
only indexing engine supported by Cyrus was SQUAT.  Today the
\fIsearch_engine\fP setting in \fIimapd.conf\fP determines which
search engine is used.
.PP
In the first synposis
.B squatter
creates an index of ALL messages in the mailbox, not just those since
the last time that it was run.  The \fB-i\fP option is used to select
incremental updates.
Any messages appended to the mailbox after
.B squatter
is run, will NOT be included in the index.  To include new messages in
the index,
.B squatter
must be run again.
.PP
In the second synopsis, \fBsquatter\fP runs in rolling mode.  In this mode
\fBsquatter\fP backgrounds itself and runs as a daemon, listening to a sync
log channel (chosen using \fB-n\fP option, and set up using the
\fIsync_log_channels\fP setting in \fIimapd.conf\fP).  Very soon after
messages are delivered or uploaded to mailboxes \fBsquatter\fP will
incrementally index the affected mailbox.
.PP
Note that incremental updates are very inefficient with the SQUAT
search engine.
If using SQUAT for large and active mailboxes, you should run
.B squatter
periodically as an EVENT in
.IR cyrus.conf (5).
Incremental updates are much more efficient with Sphinx, so if using
Sphinx you should run \fBsquatter -R\fP as a START in \fIcyrus.conf\fP(5).
.PP
In the third synopsis, \fBsquatter\fP reads a single sync log file
and performs incremental indexing on the mailboxes listed therein.  This is
sometimes useful for cleaning up after problems with rolling mode.
.PP
.B NOTE:
Messages and mailboxes that have not been indexed can still be
SEARCHed, just not as quickly as those with an index.  Also, some
advanced features of Sphinx like stemming will not work unless
messages have been indexed.
.PP
.B Squatter
reads its configuration options out of the
.IR imapd.conf (5)
file unless specified otherwise by \fB-C\fR.
.SH OPTIONS
.TP
.BI \-C " config-file"
Read configuration options from \fIconfig-file\fR.
.TP
.B \-R
Run in rolling mode; \fBsquatter\fP runs as a daemon listening to
a sync log channel and continuously incrementally indexing mailboxes.
See also \fB-d\fP and \fB-n\fP.
.TP
.B \-d
In rolling mode, don't background and do emit log messages on standard
error.  Useful for debugging.
.TP
.BI \-f " synclogfile"
Read the \fIsynclogfile\fP and incrementally index all the mailboxes
listed therein, then exit.
.TP
.BI \-n " channel"
In rolling mode, specify the name of the sync log channel that
\fBsquatter\fP will listen to.  The default is "squatter".
.TP
.B \-r
Recursively create indexes for all sub-mailboxes of the mailboxes or
mailbox prefixes given as arguments.
.TP
.B \-s
Skip mailboxes whose index file is older than their current squat file
(within a small time delta).
.TP
.B \-i
Incremental updates where indexes already exist.
.TP
.B \-a
Only create indexes for mailboxes which have the shared
\fI/vendor/cmu/cyrus-imapd/squat\fR annotation set to "true".
.br
.sp
The value of the \fB/vendor/cmu/cyrus-imapd/squat\fR annotation is
inherited by all children of the given mailbox, so an entire mailbox
tree can be indexed (or not indexed) by setting a single annotation on
the root of that tree with a value of "true" (or "false").  If a
mailbox does not have a \fB/vendor/cmu/cyrus-imapd/squat\fR annotation
set on it (or does not inherit one), then the mailbox is not indexed.
In other words, the implicit value of
\fB/vendor/cmu/cyrus-imapd/squat\fR is "false".
.TP
.B \-v
Increase the verbosity of progress/status messages.
.SH FILES
.TP
.B /etc/imapd.conf /etc/cyrus.conf
