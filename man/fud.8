.\" -*- nroff -*-
.TH FUD 8 "Project Cyrus" CMU
.\"
.\" Copyright (c) 1994-2008 Carnegie Mellon University.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. The name "Carnegie Mellon University" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For permission or any legal
.\"    details, please contact
.\"      Carnegie Mellon University
.\"      Center for Technology Transfer and Enterprise Creation
.\"      4615 Forbes Avenue
.\"      Suite 302
.\"      Pittsburgh, PA  15213
.\"      (412) 268-7393, fax: (412) 268-7395
.\"      innovation@andrew.cmu.edu
 *
.\" 4. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by Computing Services
.\"     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
.\"
.\" CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
.\" THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
.\" FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
.\" AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" $Id: fud.8,v 1.11.6.1 2009/12/28 21:51:49 murch Exp $
.SH NAME
FUD \- provide information about user mailboxes
.SH SYNOPSIS
.B fud
[
.B \-C
.I config-file
]
[
.B \-U
.I uses
]
[
.B \-T
.I timeout
]
[
.B \-D
]
.SH DESCRIPTION
.B FUD
is a long lived datagram daemon started from master that provides
information about when a user last
read their mail, when mail last arrived in a user's mailbox, and how
many messages are recent for that user.
.PP
Note that for
.B FUD
to run properly you must set proto=udp in its cyrus.conf
services entry.  prefork=1 is also recommended.
.B FUD
will automatically proxy any and all FUD requests to the appropriate
backend server if it is runing on a Cyrus Murder frontend machine.
.PP
.B FUD
reads its configuration options out of the
.IR imapd.conf (5)
file unless specified otherwise by \fB-C\fR.
.SH OPTIONS
.TP
.BI \-C " config-file"
Read configuration options from \fIconfig-file\fR.
.TP
.BI \-U " uses"
The maximum number of times that the process should be used for new
connections before shutting down.  The default is 250.
.TP
.BI \-T " timeout"
The number of seconds that the process will wait for a new connection
before shutting down.  Note that a value of 0 (zero) will disable the
timeout.  The default is 60.
.TP
.BI \-D
Run external debugger specified in debug_command.
.SH FILES
.TP
.B /etc/imapd.conf
Default configuration file.
.TP
.B /etc/cyrus.conf
Cyrus Master process configuration file.
.SH BUGS
Though not really a bug, 
.B FUD
will silently ignore any requests that it does not consider valid.
.PP
Also not really a bug,
.B FUD
requires that the anonymous user has the 0 (zero) right on the mailbox
in question.  This is only a "bug" because 0 is not a standard IMAP ACL bit.
.PP
.B FUD
is an experimental interface meant to provide information to build a
finger-like service around.  Eventually it should be superceded by a
more standards-based protocol.
