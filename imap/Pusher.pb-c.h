/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_Pusher_2eproto__INCLUDED
#define PROTOBUF_C_Pusher_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _ChannelReady ChannelReady;
typedef struct _ModSeqUpdate ModSeqUpdate;


/* --- enums --- */


/* --- messages --- */

struct  _ChannelReady
{
  ProtobufCMessage base;
  char *user;
  char *session;
  char *channel;
  char *frontend;
};
#define CHANNEL_READY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&channel_ready__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _ModSeqUpdate
{
  ProtobufCMessage base;
  char *user;
  size_t n_folders;
  char **folders;
  uint32_t modseq;
  uint32_t uidnext;
  uint32_t uidvalidity;
  char *service;
};
#define MOD_SEQ_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mod_seq_update__descriptor) \
    , NULL, 0,NULL, 0, 0, 0, NULL }


/* ChannelReady methods */
void   channel_ready__init
                     (ChannelReady         *message);
size_t channel_ready__get_packed_size
                     (const ChannelReady   *message);
size_t channel_ready__pack
                     (const ChannelReady   *message,
                      uint8_t             *out);
size_t channel_ready__pack_to_buffer
                     (const ChannelReady   *message,
                      ProtobufCBuffer     *buffer);
ChannelReady *
       channel_ready__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   channel_ready__free_unpacked
                     (ChannelReady *message,
                      ProtobufCAllocator *allocator);
/* ModSeqUpdate methods */
void   mod_seq_update__init
                     (ModSeqUpdate         *message);
size_t mod_seq_update__get_packed_size
                     (const ModSeqUpdate   *message);
size_t mod_seq_update__pack
                     (const ModSeqUpdate   *message,
                      uint8_t             *out);
size_t mod_seq_update__pack_to_buffer
                     (const ModSeqUpdate   *message,
                      ProtobufCBuffer     *buffer);
ModSeqUpdate *
       mod_seq_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mod_seq_update__free_unpacked
                     (ModSeqUpdate *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ChannelReady_Closure)
                 (const ChannelReady *message,
                  void *closure_data);
typedef void (*ModSeqUpdate_Closure)
                 (const ModSeqUpdate *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor channel_ready__descriptor;
extern const ProtobufCMessageDescriptor mod_seq_update__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_Pusher_2eproto__INCLUDED */
